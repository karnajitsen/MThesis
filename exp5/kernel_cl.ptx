//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	_Z6VecAddPPyPiS_S_S_
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[9] = {37, 100, 32, 37, 108, 108, 117, 10, 0};

.visible .entry _Z6VecAddPPyPiS_S_S_(
	.param .u64 _Z6VecAddPPyPiS_S_S__param_0,
	.param .u64 _Z6VecAddPPyPiS_S_S__param_1,
	.param .u64 _Z6VecAddPPyPiS_S_S__param_2,
	.param .u64 _Z6VecAddPPyPiS_S_S__param_3,
	.param .u64 _Z6VecAddPPyPiS_S_S__param_4
)
{
	.local .align 8 .b8 	__local_depot0[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<22>;


	mov.u64 	%rd21, __local_depot0;
	cvta.local.u64 	%SP, %rd21;
	ld.param.u64 	%rd11, [_Z6VecAddPPyPiS_S_S__param_0];
	ld.param.u64 	%rd12, [_Z6VecAddPPyPiS_S_S__param_1];
	ld.param.u64 	%rd10, [_Z6VecAddPPyPiS_S_S__param_2];
	cvta.to.global.u64 	%rd1, %rd11;
	ldu.global.u64 	%rd20, [%rd1];
	cvta.to.global.u64 	%rd3, %rd12;
	ldu.global.u32 	%r13, [%rd3];
	setp.lt.s32	%p1, %r13, 1;
	@%p1 bra 	BB0_3;

	cvta.to.global.u64 	%rd4, %rd10;
	add.u64 	%rd13, %SP, 0;
	cvta.to.local.u64 	%rd5, %rd13;
	add.s64 	%rd6, %rd5, 8;
	mov.u32 	%r12, 0;

BB0_2:
	// inline asm
	mov.u32 	%r7, %clock;
	// inline asm
	ld.u64 	%rd20, [%rd20];
	// inline asm
	mov.u32 	%r8, %clock;
	// inline asm
	sub.s32 	%r9, %r8, %r7;
	cvt.u64.u32	%rd14, %r9;
	st.global.u64 	[%rd4], %rd14;
	ld.global.u32 	%r10, [%rd3];
	st.local.u32 	[%rd5], %r10;
	st.local.u64 	[%rd6], %rd14;
	mov.u64 	%rd15, $str;
	cvta.global.u64 	%rd16, %rd15;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.global.u32 	%r13, [%rd3];
	add.s32 	%r12, %r12, 1;
	setp.lt.s32	%p2, %r12, %r13;
	@%p2 bra 	BB0_2;

BB0_3:
	mul.wide.s32 	%rd18, %r13, 8;
	add.s64 	%rd19, %rd1, %rd18;
	st.global.u64 	[%rd19], %rd20;
	ret;
}


